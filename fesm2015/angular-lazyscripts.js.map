{"version":3,"file":"angular-lazyscripts.js.map","sources":["ng://angular-lazyscripts/lib/angular-lazyscripts.service.ts","ng://angular-lazyscripts/lib/angular-lazyscripts.component.ts","ng://angular-lazyscripts/lib/angular-lazyscripts.directive.ts","ng://angular-lazyscripts/lib/angular-lazyscripts.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AngularLazyscriptsService {\n\n  loadedlist:string[]=[];\n\n  constructor() { }\n\n  loadExternalScript(url:string){\n    let timeout = new Promise((resolve, reject) => {\n      let id = setTimeout(() => {\n        clearTimeout(id);\n        reject()\n      }, 15000)\n    })\n\n    let loadp=new Promise((resolve,reject) => {\n      if(!this.loadedlist.includes(url,0)){\n        const scriptElement = document.createElement('script');\n        scriptElement.src = url;\n        scriptElement.onload = ()=>{\n          this.loadedlist.push(url);\n          resolve();}\n        document.body.appendChild(scriptElement);\n      }else{\n        resolve();\n      }\n    });\n\n    return Promise.race([loadp,timeout]);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'als-angular-lazyscripts',\n  template: `\n    <p>loaded!</p>\n  `,\n  styles: []\n})\nexport class AngularLazyscriptsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Directive, TemplateRef, ViewContainerRef, Input } from '@angular/core';\nimport { AngularLazyscriptsService } from './angular-lazyscripts.service';\n\n@Directive({\n  selector: '[alsLoad]'\n})\nexport class AngularLazyscriptsDirective {\n  @Input() set alsLoad(url:string){\n  this.alsService.loadExternalScript(url).then(()=>{\n    this.vc.createEmbeddedView(this.template);\n  }).catch(()=>{\n    this.vc.clear();\n  })\n\n  }\n\n  constructor(private template: TemplateRef<any>,private vc: ViewContainerRef,private alsService:AngularLazyscriptsService) { }\n\n}\n","import { NgModule } from \"@angular/core\";\nimport { AngularLazyscriptsComponent } from \"./angular-lazyscripts.component\";\nimport { AngularLazyscriptsDirective } from \"./angular-lazyscripts.directive\";\nimport { AngularLazyscriptsService } from \"./angular-lazyscripts.service\";\n\n@NgModule({\n  declarations: [AngularLazyscriptsComponent, AngularLazyscriptsDirective],\n  imports: [],\n  exports: [AngularLazyscriptsComponent,AngularLazyscriptsDirective]\n})\nexport class AngularLazyscriptsModule {}\n"],"names":[],"mappings":";;;;;;AAAA,MAKa,yBAAyB;IAIpC;QAFA,eAAU,GAAU,EAAE,CAAC;KAEN;;;;;IAEjB,kBAAkB,CAAC,GAAU;;YACvB,OAAO,GAAG,IAAI,OAAO;;;;;QAAC,CAAC,OAAO,EAAE,MAAM;;gBACpC,EAAE,GAAG,UAAU;;;YAAC;gBAClB,YAAY,CAAC,EAAE,CAAC,CAAC;gBACjB,MAAM,EAAE,CAAA;aACT,GAAE,KAAK,CAAC;SACV,EAAC;;YAEE,KAAK,GAAC,IAAI,OAAO;;;;;QAAC,CAAC,OAAO,EAAC,MAAM;YACnC,IAAG,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC;;sBAC5B,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC;gBACtD,aAAa,CAAC,GAAG,GAAG,GAAG,CAAC;gBACxB,aAAa,CAAC,MAAM;;;gBAAG;oBACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC1B,OAAO,EAAE,CAAC;iBAAC,CAAA,CAAA;gBACb,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;aAC1C;iBAAI;gBACH,OAAO,EAAE,CAAC;aACX;SACF,EAAC;QAEF,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,KAAK,EAAC,OAAO,CAAC,CAAC,CAAC;KACtC;;;YA/BF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;ACJD,MASa,2BAA2B;IAEtC,iBAAiB;;;;IAEjB,QAAQ;KACP;;;YAZF,SAAS,SAAC;gBACT,QAAQ,EAAE,yBAAyB;gBACnC,QAAQ,EAAE;;GAET;aAEF;;;;;;;;;ACRD,MAMa,2BAA2B;;;;;;IAUtC,YAAoB,QAA0B,EAAS,EAAoB,EAAS,UAAoC;QAApG,aAAQ,GAAR,QAAQ,CAAkB;QAAS,OAAE,GAAF,EAAE,CAAkB;QAAS,eAAU,GAAV,UAAU,CAA0B;KAAK;;;;;IAT7H,IAAa,OAAO,CAAC,GAAU;QAC/B,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,IAAI;;;QAAC;YAC3C,IAAI,CAAC,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC3C,EAAC,CAAC,KAAK;;;QAAC;YACP,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;SACjB,EAAC,CAAA;KAED;;;YAXF,SAAS,SAAC;gBACT,QAAQ,EAAE,WAAW;aACtB;;;;YALmB,WAAW;YAAE,gBAAgB;YACxC,yBAAyB;;;sBAM/B,KAAK;;;;;;;ACPR,MAUa,wBAAwB;;;YALpC,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,2BAA2B,EAAE,2BAA2B,CAAC;gBACxE,OAAO,EAAE,EAAE;gBACX,OAAO,EAAE,CAAC,2BAA2B,EAAC,2BAA2B,CAAC;aACnE;;;;;;;;;;;;;;;"}
