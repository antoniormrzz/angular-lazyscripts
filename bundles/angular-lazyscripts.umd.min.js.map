{"version":3,"sources":["ng://angular-lazyscripts/lib/angular-lazyscripts.service.ts","ng://angular-lazyscripts/lib/angular-lazyscripts.component.ts","ng://angular-lazyscripts/lib/angular-lazyscripts.directive.ts","ng://angular-lazyscripts/lib/angular-lazyscripts.module.ts"],"names":["AngularLazyscriptsService","prototype","loadExternalScript","url","_this","this","timeout","Promise","resolve","reject","id","setTimeout","clearTimeout","loadp","loadedlist","includes","scriptElement","document","createElement","src","onload","push","body","appendChild","race","Injectable","args","providedIn","AngularLazyscriptsComponent","ngOnInit","Component","selector","template","AngularLazyscriptsDirective","Object","defineProperty","alsService","then","vc","createEmbeddedView","catch","clear","Directive","TemplateRef","ViewContainerRef","Input","AngularLazyscriptsModule","NgModule","declarations","imports","providers","exports"],"mappings":"oRAAA,IAAAA,GAWEA,EAAAC,UAAAC,mBAAA,SAAmBC,GAAnB,IAAAC,EAAAC,KACMC,EAAU,IAAIC,QAAO,SAAEC,EAASC,OAC9BC,EAAKC,WAAU,WACjBC,aAAaF,GACbD,KACC,QAGDI,EAAM,IAAIN,QAAO,SAAEC,EAAQC,GAC7B,GAAIL,EAAKU,WAAWC,SAASZ,EAAI,GAQ/BK,QARkC,KAC5BQ,EAAgBC,SAASC,cAAc,UAC7CF,EAAcG,IAAMhB,EACpBa,EAAcI,OAAM,WAClBhB,EAAKU,WAAWO,KAAKlB,GACrBK,KACFS,SAASK,KAAKC,YAAYP,MAM9B,OAAOT,QAAQiB,KAAK,CAACX,EAAMP,yBA9B9BmB,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,uJAMZ,SAAA3B,IAFAK,KAAAS,WAAoB,GCPtB,IAAAc,GAaEA,EAAA3B,UAAA4B,SAAA,iCAXDC,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,0BACVC,SAAU,qEAYZJ,GALE,SAAAA,KCXF,IAAAK,GAOEC,OAAAC,eAAaF,EAAAhC,UAAA,UAAO,KAApB,SAAqBE,GAArB,IAAAC,EAAAC,KACAA,KAAK+B,WAAWlC,mBAAmBC,GAAKkC,KAAI,WAC1CjC,EAAKkC,GAAGC,mBAAmBnC,EAAK4B,YAC/BQ,SAAK,WACNpC,EAAKkC,GAAGG,+DARXC,EAAAA,UAAShB,KAAA,CAAC,CACTK,SAAU,yDAJQY,EAAAA,mBAAaC,EAAAA,wBACxB5C,sCAMN6C,EAAAA,SAWHZ,GAFE,SAAAA,EAAoBD,EAAmCM,EAA6BF,GAAhE/B,KAAA2B,SAAAA,EAAmC3B,KAAAiC,GAAAA,EAA6BjC,KAAA+B,WAAAA,EChBtF,IAAAU,uBAKCC,EAAAA,SAAQrB,KAAA,CAAC,CACRsB,aAAc,CAACpB,EAA6BK,GAC5CgB,QAAS,GACTC,UAAW,CAAClD,GACZmD,QAAS,CAACvB,EAA4BK,OAEDa,GANvC,SAAAA","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AngularLazyscriptsService {\n\n  loadedlist:string[]=[];\n\n  constructor() { }\n\n  loadExternalScript(url:string){\n    let timeout = new Promise((resolve, reject) => {\n      let id = setTimeout(() => {\n        clearTimeout(id);\n        reject()\n      }, 15000)\n    })\n\n    let loadp=new Promise((resolve,reject) => {\n      if(!this.loadedlist.includes(url,0)){\n        const scriptElement = document.createElement('script');\n        scriptElement.src = url;\n        scriptElement.onload = ()=>{\n          this.loadedlist.push(url);\n          resolve();}\n        document.body.appendChild(scriptElement);\n      }else{\n        resolve();\n      }\n    });\n\n    return Promise.race([loadp,timeout]);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'als-angular-lazyscripts',\n  template: `\n    <p>loaded!</p>\n  `,\n  styles: []\n})\nexport class AngularLazyscriptsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Directive, TemplateRef, ViewContainerRef, Input } from '@angular/core';\nimport { AngularLazyscriptsService } from './angular-lazyscripts.service';\n\n@Directive({\n  selector: '[alsLoad]'\n})\nexport class AngularLazyscriptsDirective {\n  @Input() set alsLoad(url:string){\n  this.alsService.loadExternalScript(url).then(()=>{\n    this.vc.createEmbeddedView(this.template);\n  }).catch(()=>{\n    this.vc.clear();\n  })\n\n  }\n\n  constructor(private template: TemplateRef<any>,private vc: ViewContainerRef,private alsService:AngularLazyscriptsService) { }\n\n}\n","import { NgModule } from \"@angular/core\";\nimport { AngularLazyscriptsComponent } from \"./angular-lazyscripts.component\";\nimport { AngularLazyscriptsDirective } from \"./angular-lazyscripts.directive\";\nimport { AngularLazyscriptsService } from \"./angular-lazyscripts.service\";\n\n@NgModule({\n  declarations: [AngularLazyscriptsComponent, AngularLazyscriptsDirective],\n  imports: [],\n  providers: [AngularLazyscriptsService],\n  exports: [AngularLazyscriptsComponent,AngularLazyscriptsDirective]\n})\nexport class AngularLazyscriptsModule {}\n"]}